{"version":3,"sources":["webpack:///./src/app/public/services/http.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACkC;AAK7E;IAIE,qBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,WAAM,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,mCAAmC,EAAC,CAAC,CAAC;QAChF,YAAO,GAAG,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;IAGtE,CAAC;IAED;;;;;QAKI;IACG,yBAAG,GAAV,UAAW,GAAW,EAAE,MAAY;QAApC,iBAMC;QALC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aAC1C,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IACzC,CAAC;IAED;;;;;QAKI;IACG,0BAAI,GAAX,UAAY,GAAW,EAAE,MAAY;QAArC,iBAKC;QAJC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC;aACnD,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IACzC,CAAC;IAED;;;;;QAKI;IACG,4BAAM,GAAb,UAAc,GAAW,EAAE,MAAY;QAAvC,iBAMC;QALC,gCAAgC;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aAC7C,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IACzC,CAAC;IAED;;;;;QAKI;IACG,yBAAG,GAAV,UAAW,GAAW,EAAE,MAAY;QAApC,iBAKC;QAJC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IACzC,CAAC;IAED;;;;SAIK;IACG,mCAAa,GAArB,UAAsB,GAAsB;QAC1C,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;;QAII;IACI,iCAAW,GAAnB,UAAoB,KAAK;QACvB,IAAM,GAAG,GAAG,MAAM,CAAC;QACnB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACvB;QACD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC5B;QACD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAC3B;QACD,OAAO,EAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC;IAEpC,CAAC;IAxFU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKgC,+DAAU;OAJ/B,WAAW,CAyFvB;IAAD,kBAAC;CAAA;AAzFuB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  header = new HttpHeaders({'Content-Type': 'application/x-www-form-urlencoded'});\n  options = {headers: this.header, withCredentials: true, params: null};\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  /**\n    * get请求 （获取数据）\n    * @param url 接口地址\n    * @param params 参数\n    * @returns {Promise<R>|Promise<U>} 返回\n    */\n  public get(url: string, params?: any): any {\n    this.options.params = params;\n    return this.httpClient.get(url, this.options)\n      .toPromise()\n      .then(this.handleSuccess)\n      .catch(res => this.handleError(res));\n  }\n\n  /**\n    * post请求 （添加数据）\n    * @param url 接口地址\n    * @param params 参数\n    * @returns {Promise<R>|Promise<U>} 返回\n    */\n  public post(url: string, params?: any) {\n    return this.httpClient.post(url, params, this.options)\n      .toPromise()\n      .then(this.handleSuccess)\n      .catch(res => this.handleError(res));\n  }\n\n  /**\n    * delete请求 （删除数据）\n    * @param url 接口地址\n    * @param params 参数\n    * @returns {Promise<R>|Promise<U>} 返回\n    */\n  public delete(url: string, params?: any) {\n    // this.options.params = params;\n    return this.httpClient.delete(url, this.options)\n      .toPromise()\n      .then(this.handleSuccess)\n      .catch(res => this.handleError(res));\n  }\n\n  /**\n    * put请求 （更新数据）\n    * @param url 接口地址\n    * @param params 参数\n    * @returns {Promise<R>|Promise<U>} 返回\n    */\n  public put(url: string, params?: any) {\n    return this.httpClient.put(url, params, this.options)\n      .toPromise()\n      .then(this.handleSuccess)\n      .catch(res => this.handleError(res));\n  }\n\n  /**\n    * 处理请求成功\n    * @param res 参数（成功结果）\n    * @returns {{data: (string|null|((node:any)=>any) 返回\n     */\n  private handleSuccess(res: HttpResponse<any>) {\n    return res;\n  }\n\n  /**\n    * 处理请求错误\n    * @param error 参数（失败结果）\n    * @returns {void|Promise<string>|Promise<T>|any} 返回\n    */\n  private handleError(error) {\n    const msg = '请求失败';\n    if (error.status === 400) {\n      console.log('请求参数正确');\n    }\n    if (error.status === 404) {\n      console.error('请检查路径是否正确');\n    }\n    if (error.status === 500) {\n      console.error('请求的服务器错误');\n    }\n    return {success: false, msg: msg};\n\n  }\n}\n"],"sourceRoot":""}